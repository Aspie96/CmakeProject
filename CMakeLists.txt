CMAKE_MINIMUM_REQUIRED (VERSION 3.16 FATAL_ERROR)

PROJECT ("parallel00" LANGUAGES CXX CUDA)
PROJECT ("parallel10" LANGUAGES CXX CUDA)
PROJECT ("parallel01" LANGUAGES CXX CUDA)
PROJECT ("parallel11" LANGUAGES CXX CUDA)
PROJECT ("serial_v1" LANGUAGES C)
PROJECT ("serial_v2" LANGUAGES C)
PROJECT ("serial_v3" LANGUAGES C)
PROJECT ("serial_v4" LANGUAGES C)

INCLUDE(FindCUDA)

CUDA_SELECT_NVCC_ARCH_FLAGS(CUDA_ARCH_FLAGS)
IF(WIDTH)
	add_compile_definitions(WIDTH=${WIDTH})
endif()
ADD_EXECUTABLE ("parallel00" "parallel00.cu" )
ADD_EXECUTABLE ("parallel01" "parallel01.cu" )
ADD_EXECUTABLE ("parallel01_sc" "parallel01_sc.cu" )
ADD_EXECUTABLE ("parallel01_sm" "parallel01_sm.cu" )
ADD_EXECUTABLE ("parallel01_smn" "parallel01_smn.cu" )
ADD_EXECUTABLE ("parallel01_ic" "parallel01_ic.cu" )
ADD_EXECUTABLE ("parallel01_im" "parallel01_im.cu" )
ADD_EXECUTABLE ("parallel10" "parallel10.cu" )
ADD_EXECUTABLE ("parallel10_n" "parallel10_n.cu" )
ADD_EXECUTABLE ("parallel11" "parallel11.cu" )
ADD_EXECUTABLE ("serial_v1" "serial_v1.c" )
ADD_EXECUTABLE ("serial_v2" "serial_v2.c" )
ADD_EXECUTABLE ("serial_v3" "serial_v3.c" )
ADD_EXECUTABLE ("serial_v4" "serial_v4.c" )

add_compile_definitions(N=${N})
add_compile_definitions(WIDTH=${WIDTH})

if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
	set(CMAKE_CXX_FLAGS_RELEASE "-O2")
	set(CMAKE_C_FLAGS_RELEASE "-O2")
	set_property(TARGET serial_v1 PROPERTY C_STANDARD 99)
	TARGET_LINK_LIBRARIES("serial_v1" m)
	set_property(TARGET serial_v2 PROPERTY C_STANDARD 99)
	TARGET_LINK_LIBRARIES("serial_v2" m)
	set_property(TARGET serial_v3 PROPERTY C_STANDARD 99)
	TARGET_LINK_LIBRARIES("serial_v3" m)
	set_property(TARGET serial_v4 PROPERTY C_STANDARD 99)
	TARGET_LINK_LIBRARIES("serial_v4" m)
endif()
TARGET_COMPILE_OPTIONS("parallel00" PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:${CUDA_ARCH_FLAGS}>)
TARGET_INCLUDE_DIRECTORIES("parallel00" PRIVATE ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
TARGET_COMPILE_OPTIONS("parallel01" PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:${CUDA_ARCH_FLAGS}>)
TARGET_INCLUDE_DIRECTORIES("parallel01" PRIVATE ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
TARGET_COMPILE_OPTIONS("parallel01_sc" PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:${CUDA_ARCH_FLAGS}>)
TARGET_INCLUDE_DIRECTORIES("parallel01_sc" PRIVATE ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
TARGET_COMPILE_OPTIONS("parallel01_sm" PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:${CUDA_ARCH_FLAGS}>)
TARGET_INCLUDE_DIRECTORIES("parallel01_sm" PRIVATE ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
TARGET_COMPILE_OPTIONS("parallel01_smn" PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:${CUDA_ARCH_FLAGS}>)
TARGET_INCLUDE_DIRECTORIES("parallel01_smn" PRIVATE ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
TARGET_COMPILE_OPTIONS("parallel01_ic" PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:${CUDA_ARCH_FLAGS}>)
TARGET_INCLUDE_DIRECTORIES("parallel01_ic" PRIVATE ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
TARGET_COMPILE_OPTIONS("parallel01_im" PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:${CUDA_ARCH_FLAGS}>)
TARGET_INCLUDE_DIRECTORIES("parallel01_im" PRIVATE ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
TARGET_COMPILE_OPTIONS("parallel10" PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:${CUDA_ARCH_FLAGS}>)
TARGET_INCLUDE_DIRECTORIES("parallel10" PRIVATE ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
TARGET_COMPILE_OPTIONS("parallel10_n" PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:${CUDA_ARCH_FLAGS}>)
TARGET_INCLUDE_DIRECTORIES("parallel10_n" PRIVATE ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
TARGET_COMPILE_OPTIONS("parallel11" PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:${CUDA_ARCH_FLAGS}>)
TARGET_INCLUDE_DIRECTORIES("parallel11" PRIVATE ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
